Index: 后端/polls/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># from dataclasses import dataclass\r\n# from datetime import date\r\n# from black import re\r\n# from django.shortcuts import render\r\nfrom django.http import HttpResponse\r\nfrom django.template import loader\r\n# from itsdangerous import serializer\r\n# from numpy import fix\r\nfrom .models import *\r\nimport json\r\n# from .forms import NameForm\r\nfrom django.http import HttpResponseRedirect\r\n\r\n\r\n# Create your views here.\r\n\r\n\r\ndef index(request):\r\n    template = loader.get_template('../polls/templates/polls/index.html')\r\n    return HttpResponse(template.render(request))\r\n\r\n\r\n# 测试成功\r\ndef reg_car(request):\r\n    print('### [Request POST] reg_car ###')\r\n    # json转dict\r\n    data = json.loads(request.body.decode(\"utf-8\"))\r\n    # 请求体数据: {\"car_id\":\"id\",\"car_color\":\"color\",\"car_series\":\"123\",\"car_type\":\"轿车\"}\r\n    # 数据库插入\r\n    m_cars = Cars(car_id=data['car_id'], car_color=data['car_color'], car_series=data['car_series'],\r\n                  car_type=data['car_type'])\r\n    m_cars.save()\r\n    response = HttpResponse()\r\n    response.status_code = 200\r\n    return response\r\n\r\n\r\n# 测试成功\r\ndef reg_client(request):\r\n    print('### [Request POST] reg_client ###')\r\n    data = json.loads(request.body.decode('utf-8'))\r\n    print(data)\r\n    # 这里需要动两张表\r\n    # 1、客户表添加客户\r\n    clients = Clients(client_name=data['client_name'], client_type=data['client_type'], discount=data['discount'],\r\n                      contact=data['contact'], tel=data['tel'])\r\n    clients.save()\r\n    # 2、车辆表添加车辆下的客户名\r\n    car = Cars.objects.get(car_id=data['car_id'])\r\n    car.belonging = data['client_name']\r\n    car.save()\r\n    response = HttpResponse()\r\n    response.status_code = 200\r\n    return response\r\n\r\n\r\n# 前端没传数据到这里，所以没测试过，但我觉得应该没问题\r\ndef reg_fix_table(request):\r\n    print('### [Request POST] reg_fix_table ###')\r\n    data = json.loads(request.body.decode('utf-8'))\r\n    print(data)\r\n    fixtable = FixTables(car_id=data['car_id'], priority=data['priority'], fix_type=data['type'], pay=data['pay'],\r\n                         in_time=data['in_time'], clerk_name=data['clerk_name'], clerk_id=data['clerk_id'],\r\n                         est_time=data['est_time'], describe=data['describe'])\r\n    fixtable.save()\r\n    response = HttpResponse()\r\n    response.status_code = 500\r\n    return response\r\n\r\n\r\n# 由于派工单需要两种请求方式，因此这里写了一个分支\r\ndef repair_order(request):\r\n    if request.method == 'GET':\r\n        return get_tickets(request)\r\n    elif request.method == 'POST':\r\n        return post_repair_order(request)\r\n\r\n\r\n# 派工单的post请求\r\ndef post_repair_order(request):\r\n    # 这里需要两步\r\n    # 1、删除原有数据\r\n    # 2、新增数据\r\n    return 0\r\n\r\n\r\n# def car_post(request):\r\n# form = NameForm(request.POST)\r\n# print(form)\r\n# if form.is_valid():\r\n#     # sql语句\r\n#     return HttpResponse.http.OK\r\n\r\n\r\n# def car_get(request):\r\n# form = NameForm(request.GET)\r\n# print(form)\r\n# if form.is_valid():\r\n#     # sql语句\r\n#     return HttpResponse.http.OK\r\n\r\n# 派工单的GET请求\r\n# 查询工单 GET {baseURL}/job?fix_id={fix_id}\r\ndef get_tickets(request):\r\n    print('### [Request GET] get_tickets ###')\r\n    data = {}\r\n    fix_id = request.GET.get(\"fix_id\")\r\n    res = FixTables.objects.filter(fix_id=fix_id)\r\n    data['data'] = list(res)\r\n    return HttpResponse(json.dumps(data))\r\n\r\n\r\n# 获取所有车辆信息 获得数据库中已有的车辆信息 GET {baseURL}/cars\r\ndef get_all_cars(request):\r\n    print('### [Request GET] get_all_cars ###')\r\n    data = {}\r\n    cars = Cars.objects.all()\r\n    data['data'] = list(cars)\r\n    return HttpResponse(json.dumps(data))\r\n\r\n\r\n# 获取数据库中客户信息 GET {baseURL}/client ?加入一个cars有问题 暂时不会\r\ndef get_client(request):\r\n    print('### [Request GET] get_client ###')\r\n    data = {}\r\n    client = Clients.objects.all()\r\n    data['data'] = list(client)\r\n    return HttpResponse(json.dumps(data))\r\n\r\n\r\n# 获取维修委托单信息 GET {baseURL}/fix\r\ndef get_fix(resquest):\r\n    print('### [Request GET] get_fix ###')\r\n    data = {}\r\n    fix_tables = FixTables.objects.all()\r\n    data['data'] = list(fix_tables)\r\n    return HttpResponse(json.dumps(data))\r\n\r\n\r\ndef client(request):\r\n    return HttpResponse.http.OK\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/后端/polls/views.py b/后端/polls/views.py
--- a/后端/polls/views.py	(revision 5c35ba287c025f37671579eecd96cf55d3a1a170)
+++ b/后端/polls/views.py	(date 1643088262092)
@@ -1,14 +1,8 @@
-# from dataclasses import dataclass
-# from datetime import date
-# from black import re
-# from django.shortcuts import render
 from django.http import HttpResponse
 from django.template import loader
-# from itsdangerous import serializer
-# from numpy import fix
 from .models import *
 import json
-# from .forms import NameForm
+from django.core import serializers
 from django.http import HttpResponseRedirect
 
 
@@ -116,7 +110,7 @@
     data = {}
     cars = Cars.objects.all()
     data['data'] = list(cars)
-    return HttpResponse(json.dumps(data))
+    return HttpResponse(data)
 
 
 # 获取数据库中客户信息 GET {baseURL}/client ?加入一个cars有问题 暂时不会
Index: 后端/polls/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from unicodedata import name\r\nfrom django.urls import path\r\nfrom . import views\r\n\r\n\r\nurlpatterns = [\r\n    path('', views.index, name='index'),\r\n    path('car/', views.reg_car, name='reg_car'),\r\n    path('client', views.reg_client, name='reg_client'),\r\n    path('fix', views.reg_fix_table, name='reg_fix_table'),\r\n    path('job', views.repair_order, name='repair_order')\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/后端/polls/urls.py b/后端/polls/urls.py
--- a/后端/polls/urls.py	(revision 5c35ba287c025f37671579eecd96cf55d3a1a170)
+++ b/后端/polls/urls.py	(date 1643080048284)
@@ -2,11 +2,11 @@
 from django.urls import path
 from . import views
 
-
 urlpatterns = [
     path('', views.index, name='index'),
     path('car/', views.reg_car, name='reg_car'),
     path('client', views.reg_client, name='reg_client'),
     path('fix', views.reg_fix_table, name='reg_fix_table'),
-    path('job', views.repair_order, name='repair_order')
+    path('job', views.repair_order, name='repair_order'),
+    path('cars', views.get_all_cars, name='get_all_car')
 ]
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"12478e0d-83d5-4cd1-a1cd-7e86eccc7a4b\" name=\"变更\" comment=\"get all\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"248Q0k2KHu0d350ieVyuiMww3kp\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"12478e0d-83d5-4cd1-a1cd-7e86eccc7a4b\" name=\"变更\" comment=\"\" />\r\n      <created>1643009537735</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1643009537735</updated>\r\n      <workItem from=\"1643009579852\" duration=\"3063000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"get all\">\r\n      <created>1643013017030</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643013017030</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"get all\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"get all\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5c35ba287c025f37671579eecd96cf55d3a1a170)
+++ b/.idea/workspace.xml	(date 1643088458367)
@@ -1,7 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="12478e0d-83d5-4cd1-a1cd-7e86eccc7a4b" name="变更" comment="get all" />
+    <list default="true" id="12478e0d-83d5-4cd1-a1cd-7e86eccc7a4b" name="变更" comment="get all">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/后端/polls/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/后端/polls/urls.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/后端/polls/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/后端/polls/views.py" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -9,6 +13,14 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitSEFilterConfiguration">
+    <file-type-list>
+      <filtered-out-file-type name="LOCAL_BRANCH" />
+      <filtered-out-file-type name="REMOTE_BRANCH" />
+      <filtered-out-file-type name="TAG" />
+      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
+    </file-type-list>
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -27,6 +39,35 @@
     <property name="node.js.selected.package.eslint" value="(autodetect)" />
     <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
   </component>
+  <component name="RunManager">
+    <configuration name="views" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="SHUDatabaseExperiment" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/后端/polls" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/后端/polls/views.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Python.views" />
+      </list>
+    </recent_temporary>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="默认任务">
@@ -36,6 +77,8 @@
       <option name="presentableId" value="Default" />
       <updated>1643009537735</updated>
       <workItem from="1643009579852" duration="3063000" />
+      <workItem from="1643078376404" duration="2055000" />
+      <workItem from="1643088186901" duration="116000" />
     </task>
     <task id="LOCAL-00001" summary="get all">
       <created>1643013017030</created>
@@ -65,4 +108,7 @@
     <MESSAGE value="get all" />
     <option name="LAST_COMMIT_MESSAGE" value="get all" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/SHUDatabaseExperiment$views.coverage" NAME="views 覆盖结果" MODIFIED="1643080560088" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/后端/polls" />
+  </component>
 </project>
\ No newline at end of file
